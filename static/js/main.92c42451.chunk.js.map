{"version":3,"sources":["component/AddContactInput/AddContactInput.module.css","component/AddContact/AddContact.module.css","component/ContactItem/ContactItem.module.css","component/App/App.module.css","component/ContactList/ContactList.module.css","component/AddContactInput/AddContactInput.js","component/AddContact/AddContact.js","component/ContactItem/ContactItem.js","component/ContactList/ContactList.js","component/Filter/Filter.js","component/App/App.js","index.js"],"names":["module","exports","AddContactInput","type","name","value","hahdleChange","title","pattern","className","style","label","input","toLowerCase","onChange","required","AddContact","state","number","e","setState","currentTarget","handleSubmit","preventDefault","props","handleAddContact","resetState","inputForm","onSubmit","this","btn","Component","ContactItem","contact","delet","item","button","onClick","id","ContactList","contacts","list","map","Filtr","App","filter","uuidv4","find","alert","deleteContact","changeFilter","visibleContacts","includes","contactsMem","JSON","parse","localStorage","getItem","prevProps","prevState","setItem","stringify","container","length","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.92c42451.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"AddContactInput_label__1eGZp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputForm\":\"AddContact_inputForm__1xSaj\",\"btn\":\"AddContact_btn__1Z7kZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ContactItem_item___Mk0T\",\"button\":\"ContactItem_button__LDcZd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__1Vndz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__2fng8\"};","import PropTypes from \"prop-types\";\r\nimport style from \"./AddContactInput.module.css\"\r\nexport default function AddContactInput({type,name,value,hahdleChange,title,pattern}) {\r\n    return (\r\n        <label className={style.label}>{name}\r\n            <input\r\n                className={style.input}\r\n                type={type}\r\n                name={name.toLowerCase()}\r\n                value={value}\r\n                onChange={hahdleChange}\r\n                title={title}\r\n                pattern={pattern}\r\n                required\r\n            />\r\n        </label>\r\n    )\r\n}\r\n\r\nAddContactInput.propTypes = {\r\n    type: PropTypes.string.isRequired,\r\n    name: PropTypes.string.isRequired,\r\n    value: PropTypes.string.isRequired,\r\n    title: PropTypes.string.isRequired,\r\n    pattern: PropTypes.string.isRequired,\r\n    hahdleChange: PropTypes.func.isRequired,\r\n}","import { Component } from \"react\";\r\nimport AddContactInput from \"../AddContactInput/AddContactInput\";\r\nimport style from './AddContact.module.css'\r\n\r\nexport default class AddContact extends Component {\r\n    state = {\r\n        name: \"\",\r\n        number: \"\"\r\n    }\r\n    hahdleChange = e => {\r\n    this.setState({[e.currentTarget.name]:e.currentTarget.value})\r\n    }\r\n    handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.props.handleAddContact(this.state);\r\n    this.resetState();\r\n  };\r\n\r\n  resetState = () => this.setState({ name: \"\", number: \"\" });\r\nrender(){\r\n    return (\r\n        <form className={style.inputForm} onSubmit={this.handleSubmit}>\r\n            <AddContactInput\r\n                type=\"text\"\r\n                name=\"Name\"\r\n                value={this.state.name}\r\n                hahdleChange={this.hahdleChange}\r\n                title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n                pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            />\r\n            <AddContactInput\r\n                type=\"tel\"\r\n                name=\"Number\"\r\n                value={this.state.number}\r\n                hahdleChange={this.hahdleChange}\r\n                title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n                pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            />\r\n                \r\n            \r\n            <button type=\"submit\" className={style.btn}>Add contact</button>\r\n        </form>\r\n    )\r\n}\r\n} ","import PropTypes from \"prop-types\";\r\nimport style from \"./ContactItem.module.css\";\r\n\r\nexport default function ContactItem({contact,delet}) {\r\n    return (\r\n        <li className={style.item}>\r\n            <p>{contact.name}:</p>\r\n            <p>{contact.number}</p>\r\n            <button\r\n                className={style.button}\r\n                onClick={()=>delet(contact.id)}\r\n            >delete</button>\r\n        </li>\r\n    )\r\n}\r\n\r\nContactItem.propTypes = {\r\n    contact: PropTypes.object.isRequired,\r\n    delet: PropTypes.func.isRequired,\r\n}","import PropTypes from \"prop-types\";\r\nimport ContactItem from \"../ContactItem/ContactItem\"\r\nimport style from \"./ContactList.module.css\"\r\n\r\nexport default function ContactList({ contacts, delet }) {\r\n    return (\r\n        <ul className={style.list}>\r\n          {contacts.map(contact => {\r\n            return (\r\n                <ContactItem key={contact.id} contact={contact} delet={delet}/>\r\n            )\r\n          })}\r\n        </ul>\r\n    )\r\n}\r\n\r\nContactList.propTypes = {\r\n    contacts: PropTypes.array.isRequired,\r\n    delet: PropTypes.func.isRequired,\r\n}","import PropTypes from \"prop-types\";\r\nimport AddContactInput from \"../AddContactInput/AddContactInput\"\r\n\r\nexport default function Filtr({value,onChange}) {\r\n    return (\r\n         <AddContactInput\r\n                type=\"text\"\r\n                name=\"Find contacts by name\"\r\n                value={value}\r\n                hahdleChange={onChange}\r\n                title=\"\"\r\n                pattern=\"\"\r\n            />\r\n    )\r\n}\r\n\r\nFiltr.propTypes = {\r\n    value: PropTypes.string.isRequired,\r\n    onChange: PropTypes.func.isRequired,\r\n}","import { Component } from \"react\";\nimport style from './App.module.css'\nimport AddContact from \"../AddContact/AddContact\";\nimport ContactList from \"../ContactList/ContactList\";\nimport { v4 as uuidv4 } from 'uuid';\nimport Filtr from \"../Filter/Filter\";\n\n\nexport default class App extends Component {\n  state = {\n    contacts: [],\n    filter: \"\",\n  };\n\n  componentDidMount() {\n    const contactsMem = JSON.parse(localStorage.getItem(\"contacts\"));\n    if(contactsMem) this.setState({ contacts: contactsMem });\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.state.contacts !== prevState.contacts) {\n      localStorage.setItem(\"contacts\", JSON.stringify(this.state.contacts));\n    }\n  }\n\n  handleAddContact = ({ name, number }) => {\n    const contact = {\n      id: uuidv4(),\n      name,\n      number,\n    };\n\n    const { contacts } = this.state;\n\n    if (\n      contacts.find(\n        (contact) => contact.name.toLowerCase() === name.toLowerCase()\n      )\n    ) {\n      alert(`${name} is already in contacts.`);\n    } else {\n      this.setState(({ contacts }) => ({\n        contacts: [contact, ...contacts],\n      }));\n    }\n  };\n\n  deleteContact = (id) =>\n    this.setState(({ contacts }) => ({\n      contacts: contacts.filter((contact) => contact.id !== id),\n    }));\n\n  changeFilter = (e) => {\n    this.setState({ filter: e.currentTarget.value });\n  };\n\n  visibleContacts = () => {\n    const { contacts, filter } = this.state;\n    // const normalizedFilter = filter.toLowerCase();\n\n    return contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  };\n\n  render() {\n    const { contacts } = this.state;\n    return (\n      <div className={style.container}>\n        <h1>Phonebook</h1>\n        <AddContact handleAddContact={this.handleAddContact} />\n        <h2>Contacts</h2>\n        {contacts.length > 0 ?\n          <>\n            <Filtr value={this.state.filter} onChange={this.changeFilter}/>\n            <ContactList contacts={this.visibleContacts()} delet={this.deleteContact} />\n          </>\n        : (<h4>Your phonebook is empty</h4>)\n        }\n        \n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n// import App from '../src/component/Home/App';\nimport App from './component/App/App'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}